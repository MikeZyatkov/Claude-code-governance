# Scoring calibration for Value Objects pattern v1
# This file contains the scoring rubrics used during code evaluation
# Pattern definition: patterns/domain/value-objects/v1.yaml

pattern_ref:
  name: "Value Objects"
  version: "v1"

tactic_scoring:
  - tactic_id: "private-constructor"
    scoring_rubric:
      5: "All value objects use private constructor with static factory method"
      4: "One value object has public constructor but still validates"
      3: "Multiple value objects with public constructors"
      2: "Most value objects use public constructors"
      1: "No static factory pattern used"
      0: "Not applicable (no value objects)"

  - tactic_id: "immutable-fields"
    scoring_rubric:
      5: "All fields marked as readonly, complete immutability"
      4: "One field not readonly but never mutated"
      3: "Multiple fields not readonly"
      2: "Most fields mutable"
      1: "No immutability, all fields mutable"
      0: "Not applicable"

  - tactic_id: "validate-at-creation"
    scoring_rubric:
      5: "Comprehensive validation in static factory, all invariants checked"
      4: "Good validation with minor gaps"
      3: "Some validation but incomplete"
      2: "Minimal validation"
      1: "No validation, accepts any input"
      0: "Not applicable"

  - tactic_id: "no-setters"
    scoring_rubric:
      5: "Zero setter methods, only getters for all value objects"
      4: "One setter present but not used"
      3: "Multiple setters present"
      2: "Most fields have setters"
      1: "All fields have setters"
      0: "Not applicable"

  - tactic_id: "structural-equality"
    scoring_rubric:
      5: "All value objects implement equals() with proper field comparison"
      4: "Most have equals(), one value object missing"
      3: "Some value objects implement equals()"
      2: "Few have structural equality"
      1: "No equals() methods, reference equality only"
      0: "Not applicable (equality not needed)"

  - tactic_id: "throw-domain-errors"
    scoring_rubric:
      5: "All validation failures throw DomainError with meaningful messages"
      4: "Mostly DomainError, one generic Error"
      3: "Mix of DomainError and generic Error"
      2: "Primarily generic Error"
      1: "No errors thrown, returns undefined or invalid objects"
      0: "Not applicable"

  - tactic_id: "encapsulate-behavior"
    scoring_rubric:
      5: "Value objects have rich behavior methods (calculations, queries) without mutation"
      4: "Some behavior methods present"
      3: "Minimal behavior, mostly data holders"
      2: "Anemic value objects, only getters"
      1: "No behavior at all"
      0: "Not applicable (simple values need no behavior)"

  - tactic_id: "toJSON-serialization"
    scoring_rubric:
      5: "All value objects implement toJSON() for serialization"
      4: "Most have toJSON(), one missing"
      3: "Some have toJSON()"
      2: "Few have toJSON()"
      1: "No toJSON() methods"
      0: "Not applicable (no serialization needed)"

  - tactic_id: "replace-primitives"
    scoring_rubric:
      5: "Domain concepts consistently wrapped in value objects"
      4: "Mostly value objects, few primitives slip through"
      3: "Mix of value objects and primitives for domain concepts"
      2: "Primarily primitives, few value objects"
      1: "Primitive obsession, no value objects"
      0: "Not applicable"