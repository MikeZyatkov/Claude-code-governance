# Scoring calibration for Repository Pattern v1
# This file contains the scoring rubrics used during code evaluation
# Pattern definition: patterns/domain/repository/v1.yaml

pattern_ref:
  name: "Repository Pattern"
  version: "v1"

tactic_scoring:
  - tactic_id: "interface-in-domain"
    scoring_rubric:
      5: "All repository interfaces in domain/repositories/"
      4: "One interface in wrong location"
      3: "Multiple interfaces in wrong location"
      2: "Most interfaces in wrong location"
      1: "No separation, interfaces mixed with implementations"
      0: "Not applicable (no repositories)"

  - tactic_id: "implementation-in-infrastructure"
    scoring_rubric:
      5: "All repository implementations in infrastructure/persistence/"
      4: "One implementation in wrong location"
      3: "Multiple implementations in wrong location"
      2: "Most implementations in wrong location"
      1: "Implementations in domain layer"
      0: "Not applicable"

  - tactic_id: "one-repo-per-aggregate"
    scoring_rubric:
      5: "Exactly one repository per aggregate root, none for entities/VOs"
      4: "One unnecessary repository for entity"
      3: "Multiple repositories for entities"
      2: "Repository boundaries don't match aggregate boundaries"
      1: "Repositories for every entity and value object"
      0: "Not applicable"

  - tactic_id: "extend-es-aggregates-repository"
    scoring_rubric:
      5: "All repositories extend Repository<T> from es-aggregates"
      4: "One repository doesn't extend base class but follows pattern"
      3: "Some repositories extend, others don't"
      2: "Most repositories custom implementations"
      1: "No use of es-aggregates Repository base class"
      0: "Not applicable (not using event sourcing)"

  - tactic_id: "inject-dependencies"
    scoring_rubric:
      5: "All repositories use @inject for table name, factory, and client"
      4: "One repository missing dependency injection"
      3: "Some use DI, others hardcode dependencies"
      2: "Most dependencies hardcoded"
      1: "No dependency injection used"
      0: "Not applicable"

  - tactic_id: "collection-interface"
    scoring_rubric:
      5: "Clean collection interface (readAsync, writeAsync), no query methods"
      4: "Mostly clean, one extra query method"
      3: "Several query methods in repository"
      2: "Repository is query-heavy"
      1: "Repository is basically a data access layer with many queries"
      0: "Not applicable"

  - tactic_id: "work-with-aggregates"
    scoring_rubric:
      5: "Repository always loads/saves complete aggregates, no partial operations"
      4: "One method does partial update"
      3: "Some methods work with aggregate parts"
      2: "Frequently manipulates entities directly"
      1: "Repository bypasses aggregates entirely"
      0: "Not applicable"

  - tactic_id: "use-injectable-decorator"
    scoring_rubric:
      5: "All repositories marked with @injectable()"
      4: "One repository missing decorator"
      3: "Multiple repositories missing decorator"
      2: "Most repositories not injectable"
      1: "No @injectable decorators"
      0: "Not applicable (not using DI)"

  - tactic_id: "provide-factory-function"
    scoring_rubric:
      5: "All repositories provide factory function for aggregate reconstitution"
      4: "One repository missing factory"
      3: "Some provide factory, others don't"
      2: "Most repositories don't provide factory"
      1: "No factory functions provided"
      0: "Not applicable (not using event sourcing)"